plugins {
	id 'fabric-loom' version '1.7.4'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://maven.terraformersmc.com/releases/" }
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = 'Curse Maven'
		url = "https://cursemaven.com"
	}
	//maven { url = "https://mvn.devos.one/snapshots/" } 	// Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	//maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
	//maven { url = "https://maven.tterrag.com/" } // Flywheel
	//maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	//maven { url = "https://jitpack.io" } // Mixin Extras, Fabric ASM
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
	maven { url = "https://maven.blamejared.com/" } // JEI
	maven { url = "https://maven.parchmentmc.org" } // Parchment mappings
	maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
	maven { url = "https://api.modrinth.com/maven" } // LazyDFU
	maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
	maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	maven { url = "https://jitpack.io" } // Mixin Extras, Fabric ASM
	maven { url = "https://maven.tterrag.com/" } // Flywheel
	maven { url = 'https://maven.ladysnake.org/releases' }
	maven { url = "https://dvs1.progwml6.com/files/maven/" } // location of the maven that hosts JEI files before January 2023
	maven { url = "https://maven.blamejared.com/" } // location of the maven that hosts JEI files since January 2023
	maven { url = "https://modmaven.dev" } // location of a maven mirror for JEI files, as a fallback
	maven { url = "https://maven.architectury.dev" }
	maven { url = "https://mvn.devos.one/snapshots/" } 	// Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	maven { url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' } // Geckolib
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:$rei_version"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version"
	//modCompileOnly "dev.emi:emi-fabric:${emi_version}:api"
	//modLocalRuntime "dev.emi:emi-fabric:${emi_version}"
	modImplementation "curse.maven:cloth-config-348521:4973440"
	modImplementation "curse.maven:forge-config-api-port-fabric-547434:4583000"
	modImplementation ("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}")
	modImplementation "org.jetbrains.kotlin:kotlin-reflect:2.0.21"
	implementation("com.eliotlash.mclib:mclib:${mclib_version}")
	modImplementation "maven.modrinth:el-and-ls-dye-mod:1.0.4+1.20.1"
	modImplementation "curse.maven:geckolib-388172:5675212"
	modImplementation("net.fabricmc:fabric-language-kotlin:1.12.3+kotlin.2.0.21")
	//modCompileOnly("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}")

	//so dye mod doesn't crash
	//BetterEnd
	modCompileOnly("maven.modrinth:gc8OEnCC:${betterend_version}")
	modCompileOnly("com.github.quiqueck:BCLib:${bclib_version}")
	modCompileOnly("com.github.quiqueck:WunderLib:${wunderlib_version}")
	// Botania  	// this doesn't run here with modImpl but it does run in prod. So I'm chill with it.
	modCompileOnly("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cca_version}")
	modCompileOnly("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cca_version}")
	modCompileOnly("maven.modrinth:trinkets:${trinkets_version}")
	modCompileOnly("me.zeroeightsix:fiber:${fiber_version}")
	modCompileOnly("com.github.emilyploszaj:step-height-entity-attribute:${step_height_version}")
	modCompileOnly("maven.modrinth:patchouli:${patchouli_version}")
	modCompileOnly("maven.modrinth:botania:${botania_version}")
	// Create - dependencies are added transitively
	modCompileOnly("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}")
	include(modImplementation('com.github.Chocohead:Fabric-ASM:v2.3'))

	modRuntimeOnly "com.terraformersmc:modmenu:$modmenu_version"

}

processResources {
	Map<String, ?> properties = Map.of(
			"version", version,
			"fabric_loader_version", loader_version,
			"create_version", create_version,
			"minecraft_version", minecraft_version
	)

	inputs.properties(properties)

	filesMatching("fabric.mod.json") {
		expand properties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}